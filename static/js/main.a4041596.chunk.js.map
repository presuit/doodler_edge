{"version":3,"sources":["fbase.js","components/Game.js","components/User.js","routes/Home.js","routes/Auth.js","components/router.js","components/App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dbService","authService","fbaseInstance","GameContainer","styled","div","Game","useState","score","setScore","startGame","upTimerId","downTimerid","leftTimerId","rightTimerId","grid","document","querySelector","doodler","createElement","doodlerLeftSpace","startPoint","doodlerBottomSpace","isGameOver","platforms","isJumping","isGoingLeft","isGoingRight","gameControl","Platform","newPlatBottom","this","bottom","left","Math","random","visual","classList","add","style","appendChild","movePlatforms","forEach","platform","remove","shift","console","log","newPlatform","push","jump","clearInterval","setInterval","firstChild","removeChild","innerHTML","saveToDb","gameOver","control","e","key","floor","moveLeft","moveRight","i","createPlatforms","innerText","addEventListener","a","collection","userId","currentUser","uid","createdAt","Date","now","useEffect","className","User","user","highestScore","setHighestScore","myScores","onSnapshot","snapshot","arr","item","sort","b","findMyBestScore","docs","map","doc","data","displayName","email","Home","Auth","AuthWithGoogle","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","onClick","AppRouter","isLoggedIn","path","exact","App","setIsLoggedIn","init","setInit","onAuthStateChanged","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4041596.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAdyuCpQXNUY1_DWMJF7YlZINrKVNXEx_o\",\r\n    authDomain: \"doddle-edge.firebaseapp.com\",\r\n    databaseURL: \"https://doddle-edge.firebaseio.com\",\r\n    projectId: \"doddle-edge\",\r\n    storageBucket: \"doddle-edge.appspot.com\",\r\n    messagingSenderId: \"479833056969\",\r\n    appId: \"1:479833056969:web:dd93af468094d32e744f18\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const dbService = firebase.firestore();\r\nexport const authService = firebase.auth();\r\nexport const fbaseInstance = firebase;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService, dbService } from \"../fbase\";\r\n\r\nconst GameContainer = styled.div`\r\n    width: 400px;\r\n    height: 600px;\r\n    background-color: yellow;\r\n    position: relative;\r\n    font-size: 200px;\r\n    text-align: center;\r\n    .doodler {\r\n        width: 80px;\r\n        height: 80px;\r\n        background-color: black;\r\n        color: white;\r\n        position: absolute;\r\n        border-radius: 50%;\r\n        font-size: 20px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: none;\r\n        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n    }\r\n\r\n    .platform {\r\n        width: 85px;\r\n        height: 15px;\r\n        background-color: green;\r\n        position: absolute;\r\n    }\r\n`;\r\n\r\nconst Game = () => {\r\n    const [score, setScore] = useState(0);\r\n    const startGame = () => {\r\n        const grid = document.querySelector(\".grid\");\r\n        const doodler = document.createElement(\"div\");\r\n        let doodlerLeftSpace = 50;\r\n        let startPoint = 150;\r\n        let doodlerBottomSpace = startPoint;\r\n        let isGameOver = false;\r\n        let platformCount = 5;\r\n        let platforms = [];\r\n        let upTimerId;\r\n        let downTimerid;\r\n        let isJumping = true;\r\n        let isGoingLeft = false;\r\n        let isGoingRight = false;\r\n        let leftTimerId;\r\n        let rightTimerId;\r\n        let score = 0;\r\n        let gameControl = \"\";\r\n\r\n        function createDoodler() {\r\n            grid.appendChild(doodler);\r\n            doodler.classList.add(\"doodler\");\r\n            doodler.innerText = \"(´◡`)\";\r\n            doodlerLeftSpace = platforms[0].left;\r\n            doodler.style.left = doodlerLeftSpace + \"px\";\r\n            doodler.style.bottom = doodlerBottomSpace + \"px\";\r\n        }\r\n\r\n        class Platform {\r\n            constructor(newPlatBottom) {\r\n                this.bottom = newPlatBottom;\r\n                this.left = Math.random() * 315;\r\n                this.visual = document.createElement(\"div\");\r\n\r\n                const visual = this.visual;\r\n                visual.classList.add(\"platform\");\r\n                visual.style.left = this.left + \"px\";\r\n                visual.style.bottom = this.bottom + \"px\";\r\n                grid.appendChild(visual);\r\n            }\r\n        }\r\n\r\n        function createPlatforms() {\r\n            for (let i = 0; i < platformCount; i++) {\r\n                let platformGap = 600 / platformCount;\r\n                let newPlatBottom = 100 + i * platformGap;\r\n                let newPlatform = new Platform(newPlatBottom);\r\n                platforms.push(newPlatform);\r\n                console.log(platforms);\r\n            }\r\n        }\r\n\r\n        function movePlatforms() {\r\n            if (doodlerBottomSpace > 200) {\r\n                platforms.forEach((platform) => {\r\n                    platform.bottom -= 4;\r\n                    let visual = platform.visual;\r\n                    visual.style.bottom = platform.bottom + \"px\";\r\n\r\n                    if (platform.bottom < 10) {\r\n                        let firstPlatform = platforms[0].visual;\r\n                        firstPlatform.classList.remove(\"platform\");\r\n                        platforms.shift();\r\n                        score++;\r\n                        setScore(score);\r\n                        console.log(platforms);\r\n                        let newPlatform = new Platform(600);\r\n                        platforms.push(newPlatform);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        function jump() {\r\n            clearInterval(downTimerid);\r\n            isJumping = true;\r\n            upTimerId = setInterval(function () {\r\n                doodlerBottomSpace += 20;\r\n                doodler.style.bottom = doodlerBottomSpace + \"px\";\r\n                if (doodlerBottomSpace > 350) {\r\n                    fall();\r\n                }\r\n            }, 30);\r\n        }\r\n\r\n        function fall() {\r\n            clearInterval(upTimerId);\r\n            isJumping = false;\r\n            downTimerid = setInterval(function () {\r\n                doodlerBottomSpace -= 5;\r\n                doodler.style.bottom = doodlerBottomSpace + \"px\";\r\n                if (doodlerBottomSpace <= 0) {\r\n                    gameOver();\r\n                }\r\n                platforms.forEach((platform) => {\r\n                    if (\r\n                        doodlerBottomSpace >= platform.bottom &&\r\n                        doodlerBottomSpace <= platform.bottom + 15 &&\r\n                        doodlerLeftSpace + 60 >= platform.left &&\r\n                        doodlerLeftSpace <= platform.left + 85 &&\r\n                        !isJumping\r\n                    ) {\r\n                        console.log(\"landed\");\r\n                        startPoint = doodlerLeftSpace;\r\n                        jump();\r\n                    }\r\n                });\r\n            }, 20);\r\n        }\r\n\r\n        function gameOver() {\r\n            console.log(\"Game Over!\");\r\n            isGameOver = true;\r\n            while (grid.firstChild) {\r\n                grid.removeChild(grid.firstChild);\r\n            }\r\n            grid.innerHTML = score;\r\n\r\n            setScore(score);\r\n            saveToDb(score);\r\n\r\n            clearInterval(upTimerId);\r\n            clearInterval(downTimerid);\r\n            clearInterval(leftTimerId);\r\n            clearInterval(rightTimerId);\r\n        }\r\n\r\n        function control(e) {\r\n            if (isGameOver === false) {\r\n                if (e.key === \"ArrowLeft\") {\r\n                    if (gameControl === \"ArrowLeft\") {\r\n                        return;\r\n                    }\r\n                    moveLeft();\r\n                    gameControl = \"ArrowLeft\";\r\n                } else if (e.key === \"ArrowRight\") {\r\n                    if (gameControl === \"ArrowRight\") {\r\n                        return;\r\n                    }\r\n                    moveRight();\r\n                    gameControl = \"ArrowRight\";\r\n                } else if (e.key === \"ArrowUp\") {\r\n                    if (gameControl === \"ArrowUp\") {\r\n                        return;\r\n                    }\r\n                    moveStraight();\r\n                    gameControl = \"ArrowUp\";\r\n                }\r\n            }\r\n            console.log(gameControl);\r\n        }\r\n\r\n        function moveLeft() {\r\n            if (isGoingRight) {\r\n                clearInterval(rightTimerId);\r\n                isGoingRight = false;\r\n            }\r\n            // if (isGoingLeft === true) {\r\n            //     return;\r\n            // }\r\n            // isGoingRight = false;\r\n            isGoingLeft = true;\r\n            leftTimerId = setInterval(function () {\r\n                if (doodlerLeftSpace >= 0) {\r\n                    doodlerLeftSpace -= 5;\r\n                    doodler.style.left = Math.floor(doodlerLeftSpace) + \"px\";\r\n                } else {\r\n                    doodler.style.left = \"0px\";\r\n                    // moveRight();\r\n                }\r\n            }, 20);\r\n        }\r\n\r\n        function moveRight() {\r\n            if (isGoingLeft) {\r\n                clearInterval(leftTimerId);\r\n                isGoingLeft = false;\r\n            }\r\n            // if (isGoingRight) {\r\n            //     return;\r\n            // }\r\n            // isGoingLeft = false;\r\n            isGoingRight = true;\r\n            rightTimerId = setInterval(function () {\r\n                if (doodlerLeftSpace <= 340) {\r\n                    doodlerLeftSpace += 5;\r\n                    doodler.style.left = Math.floor(doodlerLeftSpace) + \"px\";\r\n                } else {\r\n                    doodler.style.left = \"340px\";\r\n                    // moveLeft();\r\n                }\r\n            }, 20);\r\n        }\r\n\r\n        function moveStraight() {\r\n            isGoingRight = false;\r\n            isGoingLeft = false;\r\n            clearInterval(rightTimerId);\r\n            clearInterval(leftTimerId);\r\n        }\r\n\r\n        function start() {\r\n            if (!isGameOver) {\r\n                createPlatforms();\r\n                createDoodler();\r\n                setInterval(movePlatforms, 15);\r\n                jump();\r\n                document.addEventListener(\"keydown\", control);\r\n            }\r\n        }\r\n        // attach to button\r\n\r\n        start();\r\n    };\r\n\r\n    const saveToDb = async (score) => {\r\n        await dbService.collection(\"scores\").add({ userId: authService.currentUser.uid, score, createdAt: Date.now() });\r\n    };\r\n\r\n    useEffect(() => {\r\n        startGame();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <GameContainer className=\"grid\"></GameContainer>\r\n            <h3>Score: {score}</h3>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"../fbase\";\r\n\r\nconst User = () => {\r\n    const [user, setUser] = useState(authService.currentUser);\r\n    const [highestScore, setHighestScore] = useState(0);\r\n    let myScores = [];\r\n    const findMyBestScore = (arr) => {\r\n        for (const item of arr) {\r\n            if (item.userId === user.uid) {\r\n                myScores.push(item);\r\n            }\r\n        }\r\n        myScores.sort((a, b) => b.score - a.score);\r\n        setHighestScore(myScores[0].score);\r\n    };\r\n    useEffect(() => {\r\n        dbService.collection(\"scores\").onSnapshot((snapshot) => {\r\n            const scoresItems = snapshot.docs.map((doc) => ({ ...doc.data() }));\r\n            findMyBestScore(scoresItems);\r\n        });\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div>\r\n                <h3>{user.displayName}</h3>\r\n                <h3>{user.email}</h3>\r\n                <h3>나의 최고 점수: {highestScore} </h3>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Game from \"../components/Game\";\r\nimport User from \"../components/User\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Game />\r\n            <User />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { fbaseInstance, authService } from \"../fbase\";\r\n\r\nconst Auth = () => {\r\n    const AuthWithGoogle = async () => {\r\n        const googleAuthProvider = new fbaseInstance.auth.GoogleAuthProvider();\r\n        try {\r\n            await authService.signInWithPopup(googleAuthProvider);\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <h1>Please Login First and enjoy our DoodleMoji (❁´◡`❁)</h1>\r\n            <button onClick={AuthWithGoogle}>Log In With Google (❁´◡`❁)</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\n\r\nconst AppRouter = ({ isLoggedIn }) => {\r\n    return (\r\n        <HashRouter>\r\n            {isLoggedIn ? (\r\n                <>\r\n                    <Route path=\"/\" exact>\r\n                        <Home />\r\n                    </Route>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Route path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                </>\r\n            )}\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"../fbase\";\nimport AppRouter from \"./router\";\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [init, setInit] = useState(false);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    return <>{init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Loading....\"}</>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}